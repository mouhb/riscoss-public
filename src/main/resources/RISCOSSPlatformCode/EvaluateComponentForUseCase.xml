<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>RISCOSSPlatformCode</web>
  <name>EvaluateComponentForUseCase</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1430839815000</creationDate>
  <parent>xwiki:XWiki.WebHome</parent>
  <author>xwiki:XWiki.superadmin</author>
  <contentAuthor>xwiki:XWiki.superadmin</contentAuthor>
  <date>1443437696000</date>
  <contentUpdateDate>1443437692000</contentUpdateDate>
  <version>2.6</version>
  <title/>
  <comment>Imported from XAR</comment>
  <minorEdit>true</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}&#xd;
## -*- Mode:Velocity&#xd;
## EvaluateComponentForUseCase?useCase=RISCOSSPlatformEntities.Test&amp;entity=RISCOSSPlatformEntities.cjdelisle_cjdns&#xd;
##&#xd;
##&#xd;
#set($EVAL_GROOVY_PG = "RISCOSSPlatformRiskAnalysisManagerCode.EvaluateGroovy")&#xd;
#set ($analyserAPI = $xwiki.parseGroovyFromPage($EVAL_GROOVY_PG))&#xd;
##&#xd;
#set($ok = false)&#xd;
#set($userName = $xwiki.getDocument($xcontext.user).name)&#xd;
#set($riskAnalysisSession = $request.getParameter('riskAnalysisSession'))&#xd;
#if (!$riskAnalysisSession)&#xd;
  #set($entity = $request.getParameter('entity'))&#xd;
  #set($useCase = $request.getParameter('useCase'))&#xd;
  #set($riskConfiguration = $request.getParameter('riskConfiguration'))&#xd;
  #if("$!entity" == "")&#xd;
    {{error}}Missing "entity" parameter{{/error}}&#xd;
  #elseif("$!riskConfiguration" == "")&#xd;
    {{error}}Missing "riskConfiguration" parameter{{/error}}&#xd;
  #else&#xd;
    ## Escape entities that have dots&#xd;
    #set($entitySpace = "RISCOSSPlatformEntities${userName}.")&#xd;
    ###set($formatedEntity = $entity.substring(24))&#xd;
    #set($formatedEntity = $entity.substring($entitySpace.length()))&#xd;
    ##set($formatedEntity = $formatedEntity.replace(".","\."))&#xd;
    #set($formatedEntity = $entitySpace + $formatedEntity)&#xd;
    $formatedEntity&#xd;
    ###&#xd;
    #set($sessionDoc = $analyserAPI.getSessionDoc2(&#xd;
        $xwiki, $xcontext, $formatedEntity, $useCase, $riskConfiguration, true))&#xd;
$sessionDoc&#xd;
    #if("$!sessionDoc" == "")&#xd;
      {{error}}Null SessionDoc{{/error}}&#xd;
    #elseif("$!sessionDoc" == "ERROR_riskConfig_nonexistant")&#xd;
      {{error}}Parameter "riskConfiguration" points to nonexistant document{{/error}}&#xd;
    #elseif("$!sessionDoc" == "ERROR_targetName_nonexistant")&#xd;
      {{error}}Parameter "entity" points to nonexistant document{{/error}}&#xd;
    #else&#xd;
      #set($riskAnalysisSession = $sessionDoc.getFullName())&#xd;
      #set($ok = true)&#xd;
    #end&#xd;
  #end&#xd;
#else&#xd;
  #set($sessionDoc = $xwiki.getDocument($riskAnalysisSession))&#xd;
  #if($sessionDoc.isNew())&#xd;
    {{error}}Parameter "riskAnalysisSession" points to nonexistant document{{/error}}&#xd;
  #else&#xd;
    #set($ok = true)&#xd;
    #set($entity = $API.targetForSession($sessionDoc))&#xd;
    #set($useCase = $API.useCaseForSession($sessionDoc))&#xd;
    #set($riskConfiguration = $xwiki.getDocument($riskEvaluation.getProperty('riskConfiguration').getValue()))&#xd;
  #end&#xd;
#end&#xd;
##&#xd;
#if($ok == true)&#xd;
  #set($inputs = $analyserAPI.getInputs($xcontext, $sessionDoc))&#xd;
$sessionDoc&#xd;
  #if ($inputs.getString("ret") != "0" ||&#xd;
    "$!inputs.optJSONObject('output')" == "" ||&#xd;
    "$!inputs.getJSONObject('output').optJSONObject('result')" == "")&#xd;
    #set($ok = false)&#xd;
    {{error}}&#xd;
      Failed to get input values&#xd;
      RETCODE: $inputs.getString("ret")&#xd;
&#xd;
      STDOUT:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $inputs.getString("stdout")&#xd;
      {{/code}}&#xd;
&#xd;
      STDERR:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $inputs.getString("stderr")&#xd;
      {{/code}}&#xd;
&#xd;
      COMMAND:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $inputs.getString("command")&#xd;
      {{/code}}&#xd;
&#xd;
    {{/error}}&#xd;
  #end&#xd;
#end&#xd;
##&#xd;
#if($ok == true)&#xd;
  #set($entityDoc = $xwiki.getDocument($analyserAPI.targetForSession($sessionDoc)))&#xd;
  #set($useCaseDocName = "")&#xd;
  #if("$!useCase" != "")&#xd;
    #set($useCaseDocName = $xwiki.getDocument($useCase).getName())&#xd;
  #end&#xd;
  &#xd;
  ## Fix the issue with entities that have a dot (.) in their name&#xd;
  #set($entityDocName = $entityDoc.name)&#xd;
  #if("$!entity" != '')&#xd;
     #set($entitySpace = "RISCOSSPlatformEntities${userName}.")&#xd;
     #set($entityDocName = $entity.substring($entitySpace.length())) ## (24 == "RISCOSSPlatformEntities.".length)&#xd;
  #end&#xd;
  &#xd;
  #set($rdrpath = $analyserAPI.getRDRPath($xwiki))&#xd;
  #set($riskData =&#xd;
    $analyserAPI.getRiskData2($services, $inputs, $rdrpath, $entityDocName, $useCaseDocName))&#xd;
  #set($riskData_output = $riskData.optJSONObject('output'))&#xd;
  #if ("$!riskData_output" == "" || "$!riskData_output.optJSONArray('errors')" == "")&#xd;
    #set($ok = false)&#xd;
    {{error}}Failed to data from RDR (unknown error){{/error}}&#xd;
  #else&#xd;
    #set($errout = $riskData_output.getJSONArray('errors'))&#xd;
    #if($errout.length() > 0)&#xd;
      #set($ok = false)&#xd;
      {{error}}&#xd;
        Failed to data from RDR&#xd;
        #foreach($err in $errout)&#xd;
&#xd;
          {{code language=none}}$err{{/code}}&#xd;
&#xd;
        #end&#xd;
&#xd;
        RAWOUT: {{code language=none}}$riskData{{/code}}&#xd;
&#xd;
      {{/error}}&#xd;
    #end&#xd;
  #end&#xd;
#end&#xd;
##&#xd;
#if($ok == true)&#xd;
  #set($outRaw = $analyserAPI.evaluate($xcontext, $sessionDoc, $riskData))&#xd;
  #set($output = $outRaw.optJSONObject("output"))&#xd;
  #set($result = "")&#xd;
  #if($output)&#xd;
    #set($result = $output.optJSONObject("result"))&#xd;
  #end&#xd;
  #if("$!result" == "")&#xd;
    #set($ok = false)&#xd;
    {{error}}&#xd;
      Failed to run evaluation&#xd;
      COMMAND: $outRaw.getString("command")&#xd;
&#xd;
      RETCODE: $outRaw.getString("ret")&#xd;
      STDOUT:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $outRaw.getString("stdout")&#xd;
      {{/code}}&#xd;
&#xd;
      STDERR:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $outRaw.getString("stderr")&#xd;
      {{/code}}&#xd;
&#xd;
      INPUT:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $riskData.toString(2)&#xd;
      {{/code}}&#xd;
&#xd;
      RAWOUTPUT:&#xd;
&#xd;
      {{code language=none}}&#xd;
        $outRaw&#xd;
      {{/code}}&#xd;
&#xd;
    {{/error}}&#xd;
  #end&#xd;
#end&#xd;
##&#xd;
#if($ok == true)&#xd;
  #if ($analyserAPI.storeResults($sessionDoc, $result, $riskData, $outRaw) != "ok")&#xd;
&#xd;
    {{error}}&#xd;
        Failed to store results&#xd;
    {{/error}}&#xd;
&#xd;
  #elseif ("$!request.getParameter('xredirect')" != "")&#xd;
    $response.sendRedirect($request.getParameter('xredirect'))&#xd;
  #else&#xd;
    $response.sendRedirect($sessionDoc.getURL())&#xd;
  #end&#xd;
#end&#xd;
{{/velocity}}&#xd;
</content>
</xwikidoc>